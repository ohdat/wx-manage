name: prod

env:
  DOCKER_TAG: 1.1.${{ github.run_id }}
  APP_NAME: ${{ github.event.repository.name }}
  TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:1.1.${{ github.run_id }}
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
  REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
  NODE_VERSION: '16' 

on:
  push:
    branches:
      - 'master'

jobs:

  buildAndPush:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        #cache: yarn
    - name: npm install, build, and test
      run: |
        # Build and test the project, then
        # deploy to Azure Web App.
        npm install
        npm run build
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ env.TAG }},${{ env.LATEST_TAG }}

  deploy:
    needs: buildAndPush
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: AWS Credentials
        uses: ohdat/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_AK }}
          aws-secret-access-key: ${{ secrets.AWS_SK }}
          aws-region: us-east-1

      - name: helm deploy
        id: deploy
        uses: ohdat/helm-eks-action@master
        with:
          command: |
            aws eks update-kubeconfig --region us-east-1 --name ohdat-prod
            helm repo add ohdat https://ohdat.github.io/helm-template/
            helm repo update
            helm upgrade -i ${{ env.APP_NAME }} ohdat/website -n website --wait --set image.repository=${{ env.TAG }} --set "gateway.hosts[0]=${{ env.APP_NAME }}.guapitu.com"
      - name: Print deploy info
        run: echo "Response was ${{ steps.deploy.outputs.response }}"
